def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.huawei.agconnect'

android {
    signingConfigs {
        release {
            storePassword 'naja7Sporti'
            keyAlias 'naja7Sporti'
            keyPassword 'naja7Sporti'
            storeFile file('naja7Sporti.jks')
        }
    }
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.naja7.sporti"
        minSdkVersion 19
        multiDexEnabled true
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.debug
            signingConfig signingConfigs.release
            minifyEnabled true
            applicationVariants.all { variant ->
                variant.outputs.all {
                    def appName = "Sporti_"
                    def buildType = variant.buildType.name
                    def newName
                    if (buildType == 'debug'){
                        newName = "app-${variant.getFlavorName()}-debug.apk"
                    } else {
                        newName = "${appName}${defaultConfig.versionName}_${variant.getFlavorName()}.apk"
                    }
                    outputFileName = newName
                }
            }
        }
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            //signingConfig signingConfigs.debug todo this for debug mode
//
//            // Enables code shrinking, obfuscation, and optimization for only
//            // your project's release build type.
//            signingConfig signingConfigs.release
//            minifyEnabled true
//
//            // Enables resource shrinking, which is performed by the
//            // Android Gradle plugin.
//            shrinkResources true
//
//            // Includes the default ProGuard rules files that are packaged with
//            // the Android Gradle plugin. To learn more, go to the section about
//            // R8 configuration files.
//            proguardFiles getDefaultProguardFile(
//                    'proguard-android-optimize.txt'),
//                    'proguard-rules.pro'
//
//        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.0.0')


    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.android.support:multidex:1.0.3'
    implementation "androidx.browser:browser:1.2.0"
    implementation 'com.huawei.agconnect:agconnect-core:1.5.2.300'
//    implementation 'com.android.billingclient:billing:4.0.0'//3.0.2//4.0.0
//    implementation 'com.android.billingclient:billing:3.0.2'//4.0.0
//   implementation "com.android.billingclient:billing:5.0.0"
    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
}